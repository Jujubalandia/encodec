/** Configura CET Source Copyright Notice (CETSC)

   This file contains Configura CM source code and is part of the
   Configura CET Development Platform (CETDEV). Configura CM
   is a programming language created by Configura Sverige AB.
   Configura, Configura CET and Configura CM are trademarks of
   Configura Sverige AB. Configura Sverige AB owns Configura CET,
   Configura CM, and CETDEV.

   Copyright (C) 2004 Configura Sverige AB, All rights reserved.

   You can modify this source file under the terms of the Configura CET
   Source Licence Agreement (CETSL) as published by Configura Sverige AB.

   Configura Sverige AB has exclusive rights to all changes, modifications,
   and corrections of this source file. Configura Sverige AB has exclusive
   rights to any new source file containing material from this source file.
   A new source file based on this source file or containing material from
   this source file has to include this Configura CET Source Copyright Notice
   in its full content. All changes, modifications, and corrections mentioned
   above shall be reported to Configura Sverige AB within One Month from
   the date that the modification occurred.

   Configura CM is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
   See the CETSL for more details.

   You should have received a copy of the CETSL along with the CETDEV.
   If not, write to Configura Sverige AB, Box 306, SE-581 02 Linköping, Sweden.
   Tel +46 13377800, Fax +46 13377855,
   Email: info@configura.com, www.configura.com

   END OF CETSC
*/
 
package cm.encodec.bmeval;

use cm: core;

{
    pln("Hello, CM Language World!");
    

    // Assignment statement
    str mensagem = "Hello, CM Language!";

    // Method call statement
    pln(mensagem);

    int idade = 20;

    // Control flow statement
    if (idade >= 18) {
        pln("Maior de idade");
    }

    // Expressões aritméticas
    //int resultado = (a + b) * c;
    //double media = (nota1 + nota2 + nota3) / 3.0;
    //pln("Resultado: " # resultado);
    //pln("Média: " # media);

    // Expressões lógicas
    //bool isValid = (idade >= 0) && (idade <= 120);
    //pln("Idade válida: " # isValid);

    str nome = "João";
    // Expressões de concatenação de strings
    str saudacao = "Olá, " # nome # "!";
    pln(saudacao);
    // Expressões condicionais (ternário)
    double nota = 8.5;
    str status = (nota >= 7.0) ? "Aprovado" : "Reprovado";
    pln("Status: " # status);

    // Tipos numéricos
    int idade2 = 25;                    // Inteiro de 32 bits
    //long populacao = 8000000000L;      // Inteiro de 64 bits
    float prec2 = 19.99f;              // Ponto flutuante de precisão simples
    double precisao = 3.14159265359;   // Ponto flutuante de precisão dupla

    // Tipos textuais
    char inicial = 'J';                // Caractere único
    str nome2 = "Configuration Magic";   // String de tamanho variável

    // Tipo lógico
    bool ativo = true;                 // Verdadeiro ou falso

    // Arrays
    //int[] numeros = int[]();
    //str[] nomes = new str[10];

    // Objetos
    //Object obj = Object();
    //Point3D ponto = Point3D(1.0, 2.0, 3.0);

    double area = calcularArea(5.0, 10.0);
    pln("Área do retângulo: " # area);
    pln("Tchau to Configura Magic!!!!");



}

/**
 * Calcula a área de um retângulo.
 * 
 * @param largura A largura do retângulo
 * @param altura A altura do retângulo
 * @return A área calculada
 */
public double calcularArea(double largura, double altura) {
    return largura * altura;
}


